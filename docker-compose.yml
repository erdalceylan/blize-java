version: '3'

services:
  app:
    build:
      context: .
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://blize-java-mysql:3306/blize
      SPRING_DATA_MONGODB_URI: mongodb://blize-java-mongo:27017/blize
      SPRING_DATA_REDIS_HOST: blize-java-redis
      SPRING_DATA_REDIS_PORT: 6379
    depends_on:
      - blize-java-mysql
      - blize-java-redis
    command: java -jar app.jar

    networks:
      - blize-network

  blize-java-mysql:
    image: mysql:latest
    container_name: blize-java-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=blize
      - MYSQL_USER=blize
      - MYSQL_PASSWORD=blize
    ports:
      - "3306:3306"
    networks:
      - blize-network

  blize-java-mongo:
    image: mongo:latest
    container_name: blize-java-mongo
    ports:
      - "27017:27017"
    networks:
      - blize-network

  blize-java-redis:
    image: redis:latest
    container_name: blize-java-redis
    ports:
      - "6379:6379"
    networks:
      - blize-network

  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000" # API
      - "9001:9001" # Web
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    command: server /data --console-address ":9001" # Web activate
    volumes:
      - minio_data:/data
    networks:
      - blize-network

volumes:
  minio_data:

networks:
  blize-network:
    external: true